class Solution {
public:
    int rob2(vector<int> nums){
        int n = nums.size();
        if(n == 1) return nums[0];
        if(n == 2) return max(nums[0],nums[1]);
        vector<int> dp(n);
        dp[0] = nums[0];
        dp[1] = nums[1];
        dp[2] = (nums[0]+nums[2]);
        for(int i = 3;i<n;i++){
            dp[i] = max((nums[i] + dp[i-2]),(nums[i] + dp[i-3]));
        }
        return max(dp[n-1],dp[n-2]);
    }
    int rob(vector<int>& nums) {
        int n = nums.size();
        if(n == 1) return nums[0];
        if(n == 2) return max(nums[0],nums[1]);
        vector<int> num1(nums.begin(),nums.end()-1);
        vector<int> num2(nums.begin()+1,nums.end());
        return max(rob2(num1),rob2(num2));
    }
};