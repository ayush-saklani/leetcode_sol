/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        TreeNode* temproot = root;
        if (root == NULL) {
            TreeNode* tempo = new TreeNode(val);
            return tempo;
        }
        while (1) {
            if (root->val < val) {
                if (root->right) {
                    root = root->right;
                } else {
                    TreeNode* tempo = new TreeNode(val);
                    root->right = tempo;
                    break;
                }
            } else {
                if (root->left) {
                    root = root->left;
                } else {
                    TreeNode* tempo = new TreeNode(val);
                    root->left = tempo;
                    break;
                }
            }
        }
        return temproot;
    }
};