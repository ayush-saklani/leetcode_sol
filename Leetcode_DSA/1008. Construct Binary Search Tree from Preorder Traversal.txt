/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void bstFromPreorder2(TreeNode* &root,int num) {
        if(root==NULL) {
            root = new TreeNode(num);
        }else if(root->val>num){
            bstFromPreorder2(root->left,num);
        }else if(root->val<num){
            bstFromPreorder2(root->right,num);
        }
        return ;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root = new TreeNode(preorder[0]);
        for(int i =1;i<preorder.size();i++){
            bstFromPreorder2(root,preorder[i]);
        }
        return root;
    }
};