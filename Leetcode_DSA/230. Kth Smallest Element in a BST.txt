/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void kthSmallest2(TreeNode* root, int k, vector<int> &inorder) {
        if (!root || inorder.size()==k) return ;
        kthSmallest2(root->left, k, inorder);
        inorder.push_back(root->val);
        kthSmallest2(root->right, k,inorder);
    }
    int kthSmallest(TreeNode* root, int k) {
        vector<int> inorder;
        kthSmallest2(root, k,inorder);
        return inorder[k-1];
    }
};