//  approach 1 linear search 

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector <int> res = {-1 ,-1};
        for (int i = 0 ; i<nums.size();i++){
            if(nums[i]==target && res[0]==-1)   res[0]=res[1]=i;
            else if(nums[i]==target)    res[1]=i;
        }
        return res;
    }
};

// approach 2 with binary search and expanding 

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {

        int l = 0;
        int r = nums.size()-1;
        int mid;
        while(l<=r){
            mid = (l+r)/2;
            if(target==nums[mid]){
                l=mid;
                r=mid;
                while(r<nums.size()-1){
                    if(nums[r]==nums[r+1])  r++;
                    else  break;
                }
                while(l>0){
                    if(nums[l]==nums[l-1])  l--;
                    else  break;
                }
                return {l,r};
            } 
            else if(target>nums[mid])  l=mid+1;
            else if(target<nums[mid])  r=mid-1;
        }
        return {-1,-1};
    }
};