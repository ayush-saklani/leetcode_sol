class Solution {
public:
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {
        vector<vector<int>> adj(n);
        if(edges.size() == 0 || source == destination) return true;
        for(auto& i:edges){
            adj[i[0]].push_back(i[1]);
            adj[i[1]].push_back(i[0]);
        }
        vector<bool> visited(n, false);
        
        queue<int> q;
        q.push(source);
        visited[source] = true;
        
        while(!q.empty()){
            int front = q.front();
            q.pop();
            for(auto& i:adj[front]){
                if(i == destination) return true;
                if(visited[i] != true){
                    q.push(i);
                    visited[i] = true;
                }
            }
        }
        return false;
    }
};