class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector<vector<int>> dp(n, vector<int>(n, 0));
        dp[0] = matrix[0];
        for (int i = 1; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (j == 0) {
                    dp[i][j] = matrix[i][j] + min(dp[i - 1][j],dp[i - 1][j+1]);
                }
                else if (j == n-1) {
                    dp[i][j] = matrix[i][j] + min(dp[i - 1][j - 1],dp[i - 1][j]);
                }
                else{
                    dp[i][j] = matrix[i][j] + min(dp[i - 1][j - 1],min(dp[i - 1][j],dp[i - 1][j+1]));
                }
            }
        }
        int res=dp[n - 1][0];
        for (int i = 1; i < n; i++) {
            res = res < dp[n - 1][i] ? res : dp[n - 1][i];
        }
        return res;
    }
};