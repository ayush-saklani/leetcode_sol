class Solution {
public:
    int minMutation(string startGene, string endGene, vector<string>& bank) {
        unordered_map<string,bool> mp;
        bool flag = false;
        for(int i =0;i<bank.size();i++){
            mp[bank[i]] = false;
            if(bank[i] == endGene) flag = true;
        }
        if(!flag) return -1;
        
        vector<char> c = { 'A', 'C', 'G', 'T' };
        queue<string> q;
        q.push(startGene);

        int res = 0;
        while(!q.empty()){
            int size = q.size();
            while(size--){
                string front = q.front();
                q.pop();
                if(front == endGene) return res;
                
                for (int i = 0; i < 8; i++) {
                    for (char ch : c) {
                        string temp = front;
                        temp[i] = ch;

                        if (mp.find(temp) != mp.end() && !mp[temp]) {
                            mp[temp] = true;
                            q.push(temp);
                        }
                    }
                }
            }
            res++;
        }
        return -1;
    }
};