class Solution {
public:
    int longestMountain(vector<int>& arr) {
        int res = 0;
        int n = arr.size();
        for (int i = 1; i < n - 1; i++) {
            if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) { // Peak condition
                int l = i - 1;
                int r = i + 1;
                int tempres = 1;
                while (l >= 0 && arr[l] < arr[l + 1]) {
                    tempres++;
                    l--;
                }
                while (r < n && arr[r] < arr[r - 1]) {
                    tempres++;
                    r++;
                }
                i = r-1; // to reduce the overchecking 
                res = tempres >= 3 ? max(res, tempres) : res;
            }
        }
        return res;
    }
};