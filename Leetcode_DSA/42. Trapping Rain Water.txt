//approach 1

class Solution {
public:
    int trap(vector<int>& h) {
        vector<int> r, l;
        int max = h[0];
        for(int i =0;i<h.size();i++){
            if(h[i]>=max) max=h[i];
            l.push_back(max);
        }
        max = h[h.size()-1];
        for(int i =h.size()-1;i>=0;i--){
            if(h[i]>=max) max=h[i];
            r.push_back(max);
        }
        reverse(r.begin(),r.end());
        int water = 0;        
        for(int i =0;i<h.size();i++){
            water=water+(min(l[i],r[i])-h[i]);
        }
        return water;
    }
};

//approach 2

class Solution {
public:
    int trap(vector<int>& height) {
        int flag=0;
        restart:
        int start=height[0];
        int fpointer=0;
        int i = 1;
        int water= 0;
        int minus= 0;
        int maxrevp=1;
        while(i<height.size()){
            if(start<=height[i]){
                if(i-fpointer<=1){
                    start= height[i];
                    fpointer = i;
                    minus=0;
                    maxrevp= i+1;
                    i++;
                    flag++;
                }
                else{
                    water +=((i-fpointer-1)*start)-minus;
                    start= height[i];
                    fpointer = i;
                    minus=0;
                    maxrevp= i+1;
                    i++;
                    flag++;
                }
            }
            else{
                minus+=height[i];
                if(height[i]>=height[maxrevp]){
                    maxrevp= i;
                }
                i++;
            }
        }
        if(fpointer==0&&flag==0){reverse(height.begin(),height.end());flag++;goto restart;}
        vector<int> temp;
        if(height.size()-1-fpointer>1){
            temp.push_back(height[maxrevp]);
            for(int i=fpointer+1;i<height.size();i++){
                temp.push_back(height[i]);
            }
            int x = trap(temp);
            water=water+x;
            return water;
        }
        return water;
    }
};