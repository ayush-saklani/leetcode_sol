class Solution {
public:
    void flatten(TreeNode* root, vector<int>& arr) {
        if (root == NULL)
            return;
        flatten(root->left, arr);
        arr.push_back(root->val);
        flatten(root->right, arr);
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        vector<int> arr1,arr2;
        flatten(root1, arr1);
        flatten(root2, arr2);
        int i = 0, j = 0;
        int m = arr1.size(), n = arr2.size();

        vector<int> res;
        while (i < m && j < n) {
            if (arr1[i] < arr2[j]) {
                res.push_back(arr1[i]);
                i++;
            } else if (arr1[i] >= arr2[j]) {
                res.push_back(arr2[j]);
                j++;
            }
        }
        while (i < m)
            res.push_back(arr1[i++]);
        while (j < n)
            res.push_back(arr2[j++]);
        return res;
    }
};