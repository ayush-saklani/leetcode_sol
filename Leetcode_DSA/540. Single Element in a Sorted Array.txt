class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int l = 0, r = nums.size() - 1;

        while (l < r) {
            int mid = (l + r) / 2;
            if (mid % 2 != 0) mid--;
            if (nums[mid] == nums[mid + 1]) {
                l = mid + 2;
            } else {
                r = mid;
            }
        }

        return nums[l];
    }
};

class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for (int i=0;i<nums.size()-1;i=i+2){
            if(nums[i]!=nums[i+1])  return nums[i];
        }
        return nums[nums.size()-1];
    }
};