class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<string,char> m;
        unordered_map<char,string> mp;
        int index=0,i=0;
        for(i =0;i<s.length();i++){
            string temp="";
            while(s[i]!=' ' && s[i]!=NULL){
                temp.push_back(s[i]);
                i++;
            }
            if(m.count(temp) || mp.count(pattern[index])){
                if(m[temp]!=pattern[index] && mp[pattern[index]]!=temp){
                    return false;
                }
            }
            m[temp]=pattern[index];
            mp[pattern[index]]=temp;
            index++;
        }
        if(pattern[index]!=NULL) return false;
        if(i<=s.length()) return false;
        return true;
    }
};